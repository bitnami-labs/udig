// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/uplink/uplinkpb/uplink.proto

package uplinkpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterTrigger struct {
	Nonce                []byte   `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterTrigger) Reset()         { *m = RegisterTrigger{} }
func (m *RegisterTrigger) String() string { return proto.CompactTextString(m) }
func (*RegisterTrigger) ProtoMessage()    {}
func (*RegisterTrigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b16aec953f09314, []int{0}
}

func (m *RegisterTrigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterTrigger.Unmarshal(m, b)
}
func (m *RegisterTrigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterTrigger.Marshal(b, m, deterministic)
}
func (m *RegisterTrigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterTrigger.Merge(m, src)
}
func (m *RegisterTrigger) XXX_Size() int {
	return xxx_messageInfo_RegisterTrigger.Size(m)
}
func (m *RegisterTrigger) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterTrigger.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterTrigger proto.InternalMessageInfo

func (m *RegisterTrigger) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

type RegisterRequest struct {
	// The public key used to sign the nonce.
	//
	// existing encoding standards like pkcs#12 and pem are slow to gain support for
	// new ciphers; for now we'll just encode the type of the public key in the proto
	// schema and deal with cipher evolution by evolving the proto.
	Ed25519PublicKey []byte `protobuf:"bytes,1,opt,name=ed25519_public_key,json=ed25519PublicKey,proto3" json:"ed25519_public_key,omitempty"`
	// The signature of the nonce.
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// request that the tunnel broker has at least one of these ports open.
	// if the broker doesn't have (or allow) some of these ports, they won't be
	// present in the "ingress" repeated field of the subsequent Setup message.
	// The client might treat the lack of a requested port as a fatal error.
	Ports                []int32  `protobuf:"varint,3,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b16aec953f09314, []int{1}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetEd25519PublicKey() []byte {
	if m != nil {
		return m.Ed25519PublicKey
	}
	return nil
}

func (m *RegisterRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *RegisterRequest) GetPorts() []int32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

type SetupRequest struct {
	// Types that are valid to be assigned to Setup:
	//	*SetupRequest_Ingress_
	//	*SetupRequest_Redirect_
	//	*SetupRequest_Error
	Setup                isSetupRequest_Setup `protobuf_oneof:"setup"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetupRequest) Reset()         { *m = SetupRequest{} }
func (m *SetupRequest) String() string { return proto.CompactTextString(m) }
func (*SetupRequest) ProtoMessage()    {}
func (*SetupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b16aec953f09314, []int{2}
}

func (m *SetupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupRequest.Unmarshal(m, b)
}
func (m *SetupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupRequest.Marshal(b, m, deterministic)
}
func (m *SetupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupRequest.Merge(m, src)
}
func (m *SetupRequest) XXX_Size() int {
	return xxx_messageInfo_SetupRequest.Size(m)
}
func (m *SetupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupRequest proto.InternalMessageInfo

type isSetupRequest_Setup interface {
	isSetupRequest_Setup()
}

type SetupRequest_Ingress_ struct {
	Ingress *SetupRequest_Ingress `protobuf:"bytes,1,opt,name=ingress,proto3,oneof"`
}

type SetupRequest_Redirect_ struct {
	Redirect *SetupRequest_Redirect `protobuf:"bytes,2,opt,name=redirect,proto3,oneof"`
}

type SetupRequest_Error struct {
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*SetupRequest_Ingress_) isSetupRequest_Setup() {}

func (*SetupRequest_Redirect_) isSetupRequest_Setup() {}

func (*SetupRequest_Error) isSetupRequest_Setup() {}

func (m *SetupRequest) GetSetup() isSetupRequest_Setup {
	if m != nil {
		return m.Setup
	}
	return nil
}

func (m *SetupRequest) GetIngress() *SetupRequest_Ingress {
	if x, ok := m.GetSetup().(*SetupRequest_Ingress_); ok {
		return x.Ingress
	}
	return nil
}

func (m *SetupRequest) GetRedirect() *SetupRequest_Redirect {
	if x, ok := m.GetSetup().(*SetupRequest_Redirect_); ok {
		return x.Redirect
	}
	return nil
}

func (m *SetupRequest) GetError() *status.Status {
	if x, ok := m.GetSetup().(*SetupRequest_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SetupRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SetupRequest_Ingress_)(nil),
		(*SetupRequest_Redirect_)(nil),
		(*SetupRequest_Error)(nil),
	}
}

type SetupRequest_Ingress struct {
	// hostname:port pairs where the tunnel will be accessible to external clients.
	Ingress              []string `protobuf:"bytes,1,rep,name=ingress,proto3" json:"ingress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupRequest_Ingress) Reset()         { *m = SetupRequest_Ingress{} }
func (m *SetupRequest_Ingress) String() string { return proto.CompactTextString(m) }
func (*SetupRequest_Ingress) ProtoMessage()    {}
func (*SetupRequest_Ingress) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b16aec953f09314, []int{2, 0}
}

func (m *SetupRequest_Ingress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupRequest_Ingress.Unmarshal(m, b)
}
func (m *SetupRequest_Ingress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupRequest_Ingress.Marshal(b, m, deterministic)
}
func (m *SetupRequest_Ingress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupRequest_Ingress.Merge(m, src)
}
func (m *SetupRequest_Ingress) XXX_Size() int {
	return xxx_messageInfo_SetupRequest_Ingress.Size(m)
}
func (m *SetupRequest_Ingress) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupRequest_Ingress.DiscardUnknown(m)
}

var xxx_messageInfo_SetupRequest_Ingress proto.InternalMessageInfo

func (m *SetupRequest_Ingress) GetIngress() []string {
	if m != nil {
		return m.Ingress
	}
	return nil
}

type SetupRequest_Redirect struct {
	// the tunnel request is accepted by this broker instance is not the right
	// endpoint the setup a durable tunnel session.
	// The client should try again to setup the tunnel by contact to one or more of
	// these host:port pairs.
	RedirectTo           []string `protobuf:"bytes,2,rep,name=redirect_to,json=redirectTo,proto3" json:"redirect_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupRequest_Redirect) Reset()         { *m = SetupRequest_Redirect{} }
func (m *SetupRequest_Redirect) String() string { return proto.CompactTextString(m) }
func (*SetupRequest_Redirect) ProtoMessage()    {}
func (*SetupRequest_Redirect) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b16aec953f09314, []int{2, 1}
}

func (m *SetupRequest_Redirect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupRequest_Redirect.Unmarshal(m, b)
}
func (m *SetupRequest_Redirect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupRequest_Redirect.Marshal(b, m, deterministic)
}
func (m *SetupRequest_Redirect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupRequest_Redirect.Merge(m, src)
}
func (m *SetupRequest_Redirect) XXX_Size() int {
	return xxx_messageInfo_SetupRequest_Redirect.Size(m)
}
func (m *SetupRequest_Redirect) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupRequest_Redirect.DiscardUnknown(m)
}

var xxx_messageInfo_SetupRequest_Redirect proto.InternalMessageInfo

func (m *SetupRequest_Redirect) GetRedirectTo() []string {
	if m != nil {
		return m.RedirectTo
	}
	return nil
}

type SetupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupResponse) Reset()         { *m = SetupResponse{} }
func (m *SetupResponse) String() string { return proto.CompactTextString(m) }
func (*SetupResponse) ProtoMessage()    {}
func (*SetupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b16aec953f09314, []int{3}
}

func (m *SetupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupResponse.Unmarshal(m, b)
}
func (m *SetupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupResponse.Marshal(b, m, deterministic)
}
func (m *SetupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupResponse.Merge(m, src)
}
func (m *SetupResponse) XXX_Size() int {
	return xxx_messageInfo_SetupResponse.Size(m)
}
func (m *SetupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetupResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterTrigger)(nil), "RegisterTrigger")
	proto.RegisterType((*RegisterRequest)(nil), "RegisterRequest")
	proto.RegisterType((*SetupRequest)(nil), "SetupRequest")
	proto.RegisterType((*SetupRequest_Ingress)(nil), "SetupRequest.Ingress")
	proto.RegisterType((*SetupRequest_Redirect)(nil), "SetupRequest.Redirect")
	proto.RegisterType((*SetupResponse)(nil), "SetupResponse")
}

func init() { proto.RegisterFile("pkg/uplink/uplinkpb/uplink.proto", fileDescriptor_4b16aec953f09314) }

var fileDescriptor_4b16aec953f09314 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xcb, 0x4f, 0xc2, 0x40,
	0x10, 0xc6, 0x81, 0xa6, 0x3c, 0x06, 0x10, 0xb2, 0xf1, 0xd1, 0x34, 0x26, 0x92, 0x9a, 0x28, 0x51,
	0xb3, 0x84, 0x2a, 0x07, 0xaf, 0x9c, 0x30, 0x5e, 0xcc, 0x82, 0x17, 0x2f, 0x08, 0x65, 0xb2, 0x69,
	0x20, 0xdd, 0x75, 0x77, 0x7b, 0xe0, 0x9f, 0x37, 0x86, 0x6d, 0xcb, 0xc3, 0x53, 0xbb, 0xf3, 0x7d,
	0xb3, 0xbf, 0xd9, 0x99, 0x81, 0x9e, 0x5c, 0xf3, 0x41, 0x2a, 0x37, 0x71, 0xb2, 0xce, 0x3f, 0x72,
	0x99, 0xff, 0x50, 0xa9, 0x84, 0x11, 0xfe, 0x15, 0x17, 0x82, 0x6f, 0x70, 0xa0, 0x64, 0x34, 0xd0,
	0x66, 0x61, 0x52, 0x9d, 0x09, 0xc1, 0x3d, 0x74, 0x18, 0xf2, 0x58, 0x1b, 0x54, 0x33, 0x15, 0x73,
	0x8e, 0x8a, 0x9c, 0x83, 0x9b, 0x88, 0x24, 0x42, 0xaf, 0xdc, 0x2b, 0xf7, 0x5b, 0x2c, 0x3b, 0x04,
	0xfa, 0x60, 0x64, 0xf8, 0x93, 0xa2, 0x36, 0xe4, 0x09, 0x08, 0xae, 0xc2, 0xd1, 0x68, 0xf8, 0x3a,
	0x97, 0xe9, 0x72, 0x13, 0x47, 0xf3, 0x35, 0x6e, 0xf3, 0xac, 0x6e, 0xae, 0x7c, 0x58, 0xe1, 0x1d,
	0xb7, 0xe4, 0x1a, 0x1a, 0x3a, 0xe6, 0xc9, 0xc2, 0xa4, 0x0a, 0xbd, 0x8a, 0x35, 0x1d, 0x02, 0x3b,
	0xa8, 0x14, 0xca, 0x68, 0xcf, 0xe9, 0x39, 0x7d, 0x97, 0x65, 0x87, 0xe0, 0xb7, 0x0c, 0xad, 0x29,
	0x9a, 0x54, 0x16, 0xc8, 0x21, 0xd4, 0xe2, 0x84, 0x2b, 0xd4, 0xda, 0x72, 0x9a, 0xe1, 0x05, 0x3d,
	0xd6, 0xe9, 0x5b, 0x26, 0x4e, 0x4a, 0xac, 0xf0, 0x91, 0x17, 0xa8, 0x2b, 0x5c, 0xc5, 0x0a, 0x23,
	0x63, 0xb1, 0xcd, 0xf0, 0xf2, 0x34, 0x87, 0xe5, 0xea, 0xa4, 0xc4, 0xf6, 0x4e, 0xf2, 0x00, 0x2e,
	0x2a, 0x25, 0x94, 0xe7, 0xd8, 0x14, 0x42, 0xb3, 0x06, 0x52, 0x25, 0x23, 0x3a, 0xb5, 0x0d, 0x9c,
	0x94, 0x58, 0x66, 0xf1, 0x6f, 0xa1, 0x96, 0x73, 0x89, 0x77, 0x5c, 0x9f, 0xd3, 0x6f, 0xec, 0xcb,
	0xf0, 0x1f, 0xa1, 0x5e, 0x80, 0xc8, 0x0d, 0x34, 0x0b, 0xd0, 0xdc, 0x08, 0xaf, 0x62, 0x9d, 0x50,
	0x84, 0x66, 0x62, 0x5c, 0x03, 0x57, 0xef, 0x4a, 0x0c, 0x3a, 0xd0, 0xce, 0x6b, 0xd5, 0x52, 0x24,
	0x1a, 0xc3, 0x6f, 0xa8, 0x7e, 0xda, 0xc1, 0x12, 0xba, 0xbb, 0x30, 0x1b, 0x08, 0xe9, 0xd2, 0x7f,
	0x43, 0xf4, 0x0f, 0x91, 0xa2, 0x75, 0x77, 0xe0, 0xda, 0xab, 0x48, 0xfb, 0xe4, 0xf9, 0xfe, 0x19,
	0x3d, 0x21, 0x8c, 0xe1, 0xab, 0x5e, 0xec, 0xd0, 0xb2, 0x6a, 0x97, 0xe4, 0xf9, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xb6, 0xa3, 0x1f, 0xe2, 0x61, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UplinkClient is the client API for Uplink service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UplinkClient interface {
	Register(ctx context.Context, in *RegisterTrigger, opts ...grpc.CallOption) (*RegisterRequest, error)
	Setup(ctx context.Context, in *SetupRequest, opts ...grpc.CallOption) (*SetupResponse, error)
}

type uplinkClient struct {
	cc *grpc.ClientConn
}

func NewUplinkClient(cc *grpc.ClientConn) UplinkClient {
	return &uplinkClient{cc}
}

func (c *uplinkClient) Register(ctx context.Context, in *RegisterTrigger, opts ...grpc.CallOption) (*RegisterRequest, error) {
	out := new(RegisterRequest)
	err := c.cc.Invoke(ctx, "/Uplink/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uplinkClient) Setup(ctx context.Context, in *SetupRequest, opts ...grpc.CallOption) (*SetupResponse, error) {
	out := new(SetupResponse)
	err := c.cc.Invoke(ctx, "/Uplink/Setup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UplinkServer is the server API for Uplink service.
type UplinkServer interface {
	Register(context.Context, *RegisterTrigger) (*RegisterRequest, error)
	Setup(context.Context, *SetupRequest) (*SetupResponse, error)
}

// UnimplementedUplinkServer can be embedded to have forward compatible implementations.
type UnimplementedUplinkServer struct {
}

func (*UnimplementedUplinkServer) Register(ctx context.Context, req *RegisterTrigger) (*RegisterRequest, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedUplinkServer) Setup(ctx context.Context, req *SetupRequest) (*SetupResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method Setup not implemented")
}

func RegisterUplinkServer(s *grpc.Server, srv UplinkServer) {
	s.RegisterService(&_Uplink_serviceDesc, srv)
}

func _Uplink_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTrigger)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UplinkServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Uplink/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UplinkServer).Register(ctx, req.(*RegisterTrigger))
	}
	return interceptor(ctx, in, info, handler)
}

func _Uplink_Setup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UplinkServer).Setup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Uplink/Setup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UplinkServer).Setup(ctx, req.(*SetupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Uplink_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Uplink",
	HandlerType: (*UplinkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Uplink_Register_Handler,
		},
		{
			MethodName: "Setup",
			Handler:    _Uplink_Setup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/uplink/uplinkpb/uplink.proto",
}
